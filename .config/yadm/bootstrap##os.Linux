#!/bin/bash

set -e

sudo apt-get update

sudo apt-get install -y autoconf build-essential jq pkg-config

# Ensure GitHub CLI is available first as we rely on it for everything else.
# https://github.com/cli/cli/blob/trunk/docs/install_linux.md#debian-ubuntu-linux-raspberry-pi-os-apt
if ! command -v gh &> /dev/null
then
  type -p curl >/dev/null || (sudo apt update && sudo apt install curl -y)
  curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg \
    && sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg \
    && echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null \
    && sudo apt update \
    && sudo apt install gh -y
fi

# https://github.com/so-fancy/diff-so-fancy
if ! command -v diff-so-fancy &> /dev/null
then
  local_share="${HOME}/.local/share"

  if [ ! -d "$local_share" ]
  then
    mkdir -p "$local_share"
  fi

  gh release download --clobber --repo so-fancy/diff-so-fancy --output /tmp/diff-so-fancy.tar.gz --archive tar.gz
  tar xf /tmp/diff-so-fancy.tar.gz -C "$local_share"
  rm /tmp/diff-so-fancy.tar.gz

  diff_so_fancy_dir=$(find ~/.local/share -type d -name "diff-so-fancy*")
  sudo ln -s "${diff_so_fancy_dir}/diff-so-fancy" /usr/local/bin/
fi

# https://github.com/junegunn/fzf
if ! command -v fzf &> /dev/null
then
  gh repo clone junegunn/fzf "${HOME}/.fzf" -- --depth 1
  eval "${HOME}/.fzf/install --key-bindings --completion --no-zsh --no-fish --no-update-rc"
fi

# https://github.com/jesseduffield/lazygit
if ! command -v lazygit &> /dev/null
then
  gh release download --clobber --output /tmp/lazygit.tar.gz --repo jesseduffield/lazygit --pattern "*_Linux_x86_64.tar.gz"
  tar xf /tmp/lazygit.tar.gz -C /tmp/
  sudo install /tmp/lazygit /usr/local/bin
fi

# https://github.com/neovim/neovim
if ! command -v nvim &> /dev/null
then
  gh release download --clobber --dir /tmp/ --repo neovim/neovim --pattern "nvim.appimage"

  /tmp/nvim.appimage --appimage-extract
  squashfs-root/AppRun --version

  sudo mv squashfs-root /
  sudo ln -s /squashfs-root/AppRun /usr/local/bin/nvim
fi

# https://github.com/BurntSushi/ripgrep
if ! command -v rg &> /dev/null
then
  gh release download --clobber --output /tmp/ripgrep.deb --repo BurntSushi/ripgrep --pattern "ripgrep_*_amd64.deb"
  sudo dpkg -i /tmp/ripgrep.deb
fi

# https://github.com/universal-ctags/ctags
if ! command -v ctags &> /dev/null
then
  gh release download --clobber --repo universal-ctags/ctags --output /tmp/universal-ctags.tar.gz --archive tar.gz
  tar xf /tmp/universal-ctags.tar.gz -C /tmp/
  ctags_dir=$(find /tmp -type d -name "ctags-*")
  cd "${ctags_dir}"
  ./autogen.sh
  ./configure
  make
  sudo make install
fi
